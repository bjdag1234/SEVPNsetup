global
	log /dev/log	local0
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon
	debug

	# Default SSL material locations
	ca-base /etc/ssl/certs/
	crt-base /etc/ssl/certs/

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL).
	ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL

defaults
	log	global
	option dontlognull               #Disable logging of null connections as these can pollute the logs
	option redispatch               # Enable session redistribution in case of connection failure, which is important in a HA environment
	option tcp-smart-accept         # Performance tweak, saving one ACK packet during the accept sequence
	option tcp-smart-connect        # Performance tweak, saving of one ACK packet during the connect sequence
	
	# Setting timeouts
	timeout connect           45s
	timeout client            2m
	timeout server            2m
	retries                   5
	
	timeout http-request     2m    # Slowloris protection
	timeout tarpit            2m     # tarpit hold time
	timeout queue             2m
	backlog                10000
	
	
frontend ft_http
    bind :80
    bind :443
    bind :8080
    mode tcp
    stick match src
    stick-table type ip size 200k expire 2m
    tcp-request inspect-delay 2s
    tcp-request content accept if HTTP
    tcp-request content accept if { req.ssl_hello_type 1 }
    acl to_ssh payload(0,7) -m bin 5353482d322e30
    acl to_ssh payload(1,7) -m bin 5353482d322e30
    use_backend bk_ssh if to_ssh
   
    acl to_vpn req_ssl_sni -i secure.example.com
    acl to_vpn req_ssl_sni -i vpn.example.com
    acl to_vpn path_beg -i /vpnsvc/
    acl to_vpn path_beg -i /vpnsvc
    acl to_vpn { ssl_fc_cipher } -i AES-128-CBC
    use_backend bk_softe if { ssl_fc }
    use_backend bk_softe if to_vpn   
       
    acl to_squid hdr(host) -i m.google.com
    acl to_squid hdr(host) -i m.facebook.com
    acl to_squid hdr(host) -i mobile.facebook.com
    acl to_squid hdr(host) -i facebook.com
    acl to_squid hdr(host) -i m.viber.com
    acl to_squid hdr(host) -i m.twitter.com
    acl to_squid hdr(host) -i twitter.com
    acl to_squid hdr(host) -i mobile.twitter.com
    acl to_squid hdr(X-Online-Host) -i m.google.com
    acl to_squid hdr(X-Online-Host) -i m.facebook.com
    acl to_squid hdr(X-Online-Host) -i mobile.facebook.com
    acl to_squid hdr(X-Online-Host) -i facebook.com
    acl to_squid hdr(X-Online-Host) -i m.viber.com
    acl to_squid hdr(X-Online-Host) -i m.twitter.com
    acl to_squid hdr(X-Online-Host) -i twitter.com
    acl to_squid hdr(X-Online-Host) -i mobile.twitter.com
    acl to_squid hdr(X-Online-Host) -m found
    acl to_squid hdr(X-Forwarded-Host) -m found
    use_backend bk_squid if to_squid
    
    default_backend bk_softe
    
backend bk_ssh
  mode tcp
  server ssh 127.0.0.1:22
  timeout server 15m
  option tcpka

backend bk_softe
  mode tcp
  server softe 127.0.0.1:5555
  timeout server 5m
  option tcpka
  
backend bk_squid
  mode tcp
  server squid 127.0.0.1:3128
  timeout server 4m
  option tcpka
